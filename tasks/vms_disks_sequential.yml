---
# Setup vmware vms disks sequentiallly

- block:
    - name: Sequential vmware virtual machines disks setup
      vmware_guest_disk:
        datacenter: >-
          {{ vm.datacenter
             | default(vmware_provisioner_vm_datacenter)
             | default(omit, boolean=true) }}
        disk: "{{ lookup('template', 'disks.yml.j2') | from_yaml }}"
        folder: >-
          {{ vm.folder
             | default(vmware_provisioner_vm_folder)
             | default(omit, boolean=true)  }}
        hostname: >-
          {{ vm.vcenter
             | default(vmware_provisioner_hostname_default) }}
        name: >-
          {{ vm.name
             | default(vmware_provisioner_vm_name)
             | default(omit, boolean=true) }}
        password: >-
          {{ vmware_provisioner_auth_item.password
             | default(vmware_provisioner_password) }}
        port: >-
          {{ vmware_provisioner_port | default(omit) }}
        username: >-
          {{ vmware_provisioner_auth_item.username
             | default(vmware_provisioner_username) }}
        uuid: >-
          {{ vm.uuid
             | default(vmware_provisioner_vm_uuid)
             | default(omit, boolean=true) }}
        validate_certs: >-
          {{ vmware_provisioner_validate_certs | default(omit) }}
      register: vmware_provisioner_vms_disks_setup_result
      when: vm.state | default(vmware_provisioner_vm_state) != "absent"
      loop: "{{ vmware_provisioner_vms_to_manage }}"
      loop_control:
        loop_var: vm
        index_var: vm_index
        label: >-
          {{ vm.name }}
          {{ vm.state
             | default(vmware_provisioner_vm_state)
             | default(omit, boolean=true) }}
      ignore_errors: yes
      no_log: "{{ vmware_provisioner_no_log | bool }}"
      vars:
        vmware_provisioner_auth_item: >-
          {{ vmware_provisioner_auth
             [vm.vcenter | default(vmware_provisioner_hostname_default)]
             | default({}) }}

    - name: Check vmware virtual machines disks setup
      assert:
        that: >-
            vmware_provisioner_vms_disks_setup_result.results[vm_index]
            is success
        quiet: yes
        fail_msg: >-
          {{ vmware_provisioner_vms_disks_setup_result.results[vm_index].msg
             | default("") }}
        success_msg: Virtual machine disks setup was successful
      loop: "{{ vmware_provisioner_vms_to_manage }}"
      loop_control:
        loop_var: vm
        index_var: vm_index
        label: >-
          {{ vm.name }}
          {{ vm.state
             | default(vmware_provisioner_vm_state)
             | default(omit, boolean=true) }}
  tags:
    - role::vmware_provisioner
    - role::vmware_provisioner::vms
    - role::vmware_provisioner::vms::disks
